<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.8.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.docker.sample</groupId>
	<artifactId>demo.docker</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo.docker</name>
	<description>Demo project for Spring Boot</description>
	<packaging>rpm</packaging>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<version>2.1.5</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>generate-rpm</id>
						<goals>
							<goal>rpm</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
				     <name>demo-docker</name>
                     <group>Development</group>
                     <description>Maven Recipe: RPM Package.</description>
				   	<mappings>
						<mapping>
							<directory> ${rpmInstallDir}</directory>
							<groupname>${rpmGroupname}</groupname>
							<filemode>${rpmDirectoryMode}</filemode>
						</mapping>
						<mapping>
							<directory>${rpmInstallDir}/lib</directory>
							<username>${rpmUsername}</username>
							<groupname>${rpmGroupname}</groupname>
							<filemode>${rpmDirectoryMode}</filemode>
						</mapping>
						<mapping>
							<directory>${rpmInstallDir}/bin</directory>
							<username>${rpmUsername}</username>
							<groupname>${rpmGroupname}</groupname>
							<filemode>${rpmDirectoryMode}</filemode>
						</mapping>
						<mapping>
							<directory>${rpmInstallDir}/docs</directory>
							<username>${rpmUsername}</username>
							<groupname>${rpmGroupname}</groupname>
							<filemode>${rpmDirectoryMode}</filemode>
						</mapping>
						<mapping>
							<directory>${rpmInstallDir}/docs/sample</directory>
							<username>${rpmUsername}</username>
							<groupname>${rpmGroupname}</groupname>
							<filemode>${rpmDirectoryMode}</filemode>
						</mapping>
						<mapping>
							<directory>${rpmInstallDir}/etc</directory>
							<username>${rpmUsername}</username>
							<groupname>${rpmGroupname}</groupname>
							<filemode>${rpmDirectoryMode}</filemode>
						</mapping>
					</mappings>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<properties>
	    <java.version>1.8</java.version>
		<rpmDirectoryMode>0755</rpmDirectoryMode>
		<rpmGroupname>web</rpmGroupname>
		<rpmUsername>webuser</rpmUsername>
		<rpmArchitecture>x86_64</rpmArchitecture>
		<rpmSoftwareName>demo-docker</rpmSoftwareName>
		<baseInstallDir>/opt/demo/installed</baseInstallDir>
		<rpmSpftware>${rpmSoftwareName}-${project.version}</rpmSpftware>
		<rpmInstallDir>${baseInstallDir}/${rpmSpftware}</rpmInstallDir>
	</properties>
</project>
